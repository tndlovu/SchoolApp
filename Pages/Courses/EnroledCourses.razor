@page "/enroledcourses"
@attribute [Authorize]
@inject ICoursesService CoursesService;
@inject IAccountService AccountService;
@inject NavigationManager NavigationManager;
@inject IAlertService AlertService;

<div class="card-body">
    <div class="container">       
        <p>Below ae the course that you are registerd for.Feel free to make adjustments to where required.</p>
    </div>
    <table class="table table-striped">
        <thead>
            <tr>
                <th style="width: 25%">Course Name</th>
                <th style="width: 25%">Course Description</th>
                <th style="width: 25%">Date Registered</th>
                <th style="width: 25%">Deregister</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var course in EnroledCoursesList)
                {            
                <tr>
                    <td>@course.Course.Name</td>
                    <td>@course.Course.Description</td>
                    <td>@course.EnroledFrom</td>
                    <td>
                        <button @onclick="@(() => DeregisterUserForCouse(course.Course.Id,UserId))" disabled="@course.Course.IsDeleting" class="btn btn-primary">Deregister</button>
                    </td>
                </tr>
                }
        </tbody>
    </table>
</div>

@code {
    [Parameter]
    public string UserId{ get; set; }
    [Parameter]
    public IList<Models.Course> StudentCourses { get; set; }
    [Parameter]
    public IList<Models.Courses.EnroledCourse> EnroledCoursesList{ get; set; }

    public async Task DeregisterUserForCouse(string CourseId, string userId)
        {
        await CoursesService.DeregisterStudentToCourse(CourseId, userId);
        NavigationManager.NavigateTo("/courses/list");
        StateHasChanged();
        }
}
